@model Spice.Models.ViewModels.IndexViewModel

<br />
<div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
    <ol class="carousel-indicators">
        <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
        <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
        <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
    </ol>
    <div class="carousel-inner">
        <div class="carousel-item active">
            <img class="d-block w-100" src="~/Images/header-spicy food 2.jpg" alt="First slide">
           
        </div>
        <div class="carousel-item">
            <img class="d-block w-100" src="~/Images/spicy food-header.jpg" alt="Second slide">
           
        </div>
        <div class="carousel-item">
            <img class="d-block w-100" src="~/Images/indian-food-header-3jpg.jpg" alt="Third slide">
        </div>
    </div>
    <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>



<br />

@if (Model.Coupon.ToList().Count > 0)
{
    <div class="border">
        <div class="carousel" data-ride="carousel" data-interval="2000">
            @for (int i = 0; i < Model.Coupon.Count(); i++)
            {
                if (i == 0)
                {

                    <div class="carousel-item active">
                        <div class="d-flex w-100 justify-content-between text-white" style="background: #545b62;text-align:center; padding: 10px 10px 0 10px;">
                            <p>@Model.Coupon.ToList()[i].Discount% OFF ANY PURCHASE OVER $@Model.Coupon.ToList()[i].MinimumAmount</p>
                            <p style="right: 0 !important;">PROMO CODE: @Model.Coupon.ToList()[i].Name</p>
                        </div>
                        
                    </div>
                }
                else
                {

        <div class="carousel-item">

            <div class="d-flex w-100 justify-content-between text-white" style="background: #545b62; text-align:center; padding: 10px 10px 0 10px;">
                <p>@Model.Coupon.ToList()[i].Discount% OFF ANY PURCHASE OVER $@Model.Coupon.ToList()[i].MinimumAmount</p>
                <p style="right: 0 !important;">PROMO CODE: @Model.Coupon.ToList()[i].Name</p>
            </div>
        </div>
                }
            }
        </div>
    </div>
}

<br />
<br />


<div class="backgroundWhite container">

    <ul id="menu-filters" class="menu-filter-list list-inline text-center">
        <li class="filter active btn btn-secondary ml-1 mr-1" data-filter="menu-restaurant">Show All</li>

        @foreach (var item in Model.Category)
        {
            <li class="filter ml-1 mr-1" data-filter="@item.Name.Replace(" ", string.Empty)">@item.Name</li>

        }
    </ul>


    @foreach (var category in Model.Category)
    {
        <div class="row" id="menu-wrapper">
            <partial name="_ThumbNailAreaPartial" model="@Model.MenuItem.Where(u => u.Category.Name.Equals(category.Name))"></partial>
        </div>
    }
</div>

@section Scripts {
    <script>
        let post = document.querySelector(".post");
        let menuFilterBtn = document.querySelectorAll("#menu-filters li");
        let restaurantMenu = document.querySelectorAll(".menu-restaurant");

        for (let i = 0; i < menuFilterBtn.length; i++) {
            menuFilterBtn[i].addEventListener('click', function () {
                console.log("el was clicked")

                menuFilterBtn.forEach(function (el) {
                    el.classList.remove('active')
                    el.classList.remove('btn')
                    el.classList.remove('btn-secondary')
                })


                menuFilterBtn[i].classList.add('active');
                menuFilterBtn[i].classList.add('btn');
                menuFilterBtn[i].classList.add('btn-secondary');

                restaurantMenu.forEach(function (el) {
                    el.style.display = "none";
                })

                if (menuFilterBtn[i].textContent === "Show All") {
                    restaurantMenu.forEach(function (el) {
                        el.style.display = "block";
                    })
                } else {
                    restaurantMenu[i - 1].style.display = "block";

                }
                let selectedFilter = menuFilterBtn[i].getAttribute('data-fiter');

            })

        }



    </script>
}