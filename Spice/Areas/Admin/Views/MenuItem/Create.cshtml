@model Spice.Models.ViewModels.MenuItemViewModel
@using Spice.Extensions
@{
    ViewData["Title"] = "Create Menu Item";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="text-info">Create Menu Item</h2>

<form method="post" enctype="multipart/form-data">
    <div class="border backgroundWhite">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="MenuItem.Name" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <input asp-for="MenuItem.Name" class="form-control" />
                <span asp-validation-for="MenuItem.Name" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="MenuItem.Description" class="col-form-label"></label>
            </div>
            <div class="col-5">
                @Html.TextAreaFor(m => m.MenuItem.Description)
                </div>
            <div>
                <span asp-validation-for="MenuItem.Description" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="MenuItem.Price" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <input asp-for="MenuItem.Price" class="form-control" />
                <span asp-validation-for="MenuItem.Price" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="MenuItem.Image" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <input type="file" name="files" multiple class="form-control" />
            </div>
        </div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="MenuItem.CategoryId" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <select asp-for="@Model.MenuItem.CategoryId" id="CategoryId" asp-items="Model.Category.ToSelectListItem(Model.MenuItem.CategoryId)" class="form-control"></select>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="MenuItem.SubCategoryId" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <select asp-for="@Model.MenuItem.SubCategoryId" id="SubCategoryId" name="SubCategoryId" asp-items="@(new SelectList(string.Empty, "Id", "Name"))" class="form-control"></select>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="MenuItem.Spicyness" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <select asp-for="MenuItem.Spicyness" asp-items="Html.GetEnumSelectList<MenuItem.ESpicy>()"class="form-control" ></select>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-5 offset-2">
                <partial name="_BackToListAndCreateButton" />
            </div>
        </div>
    </div>
</form>

@section Scripts {
<script>
     tinymce.init({
   selector: 'textarea',
      toolbar_mode: 'floating',
      tinycomments_mode: 'embedded',
      tinycomments_author: 'Author name'
    });
</script>

<script type="text/javascript">
    let categorySelected = document.querySelector("#CategoryId");
    let subCategorySelected = document.querySelector("#SubCategoryId");

    function getSubCategory() {
        

         fetch('/Admin/SubCategory/GetSubCategory/'+categorySelected.value)
            .then(function (response) {
	            // The API call was successful!
	            return response.json();
            }).then(function (data) {
                // This is the JSON from our response
                subCategorySelected.textContent = '';
                for (i in data) {
                    let optionSubCat = document.createElement('option');
                    optionSubCat.value = data[i].value;
                    optionSubCat.textContent = data[i].text;

                    subCategorySelected.appendChild(optionSubCat);
                }
 
            }).catch(function (err) {
	            // if There was an error
	            console.warn('oops Something went wrong.', err);
            });
    }


    window.addEventListener('load', getSubCategory);
    categorySelected.addEventListener('change', getSubCategory);

</script>
}